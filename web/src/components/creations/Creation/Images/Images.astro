---
import { Image } from "@astrojs/image/components";
import type { Creation } from "../../../../graphql/generated/sdk";

type Props = {
    images: Creation["images"];
};
const { images } = Astro.props;
---

<style>
    #creationImages {
        position: relative;
        overflow: hidden;
        width: 100%;
        height: 100%;
    }

    #creationImages img,
    #creationImages video {
        position: absolute;
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0;
        transition: opacity 2s ease-out;
        z-index: 0;
    }

    #creationImages img.active,
    #creationImages video.active {
        opacity: 1;
        z-index: 1;
    }
</style>

<div id="creationImages">
    {
        images?.map((image, index) => {
            const url = image?.asset?.url;
            const { width, height } = image?.asset?.metadata?.dimensions ?? {};
            return (
                <Image
                    image-index={index}
                    class={index === 0 ? "active" : ""}
                    src={url}
                    width={width}
                    height={height}
                    format="webp"
                    alt=""
                />
            );
        })
    }
</div>

<script>
    const speed = 10000;
    const images = Array.from(
        document.getElementById("creationImages")?.children ?? { length: 0 }
    );
    if (images.length > 0) {
        setInterval(() => {
            const activeElement = document.querySelector(
                "#creationImages .active"
            );
            const current = Number(
                activeElement?.getAttribute("image-index") ?? 0
            );
            const next = (current + 1) % images.length;
            images.forEach((image, index) => {
                if (index === next) {
                    image.classList.add("active");
                } else {
                    image.classList.remove("active");
                }
            });
        }, speed);
    }
</script>
